Ember.TEMPLATES.application=Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e,f="";return b.buffer.push('\n                            <li class="list-group-item">'),d={},e={},b.buffer.push(k(c._triageMustache.call(a,"item",{hash:{},contexts:[a],types:["ID"],hashContexts:e,hashTypes:d,data:b}))),b.buffer.push("</li>\n                        "),f}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var g,h,i,j="",k=this.escapeExpression,l=this;return e.buffer.push('<div>\n    <nav class="navbar navbar-default navbar-fixed-top" role="navigation">\n        <div class="navbar-header">\n            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">\n                <span class="sr-only">Toggle navigation</span>\n                <span class="icon-bar"></span>\n                <span class="icon-bar"></span>\n                <span class="icon-bar"></span>\n            </button>\n            <a class="navbar-brand" href="#">Your App</a>\n        </div>\n        <div class="collapse navbar-collapse navbar-ex1-collapse">\n        </div>\n    </nav>\n    <div class="container" id="main">\n        <div class="row">\n            <div>\n                <div class="col-md-3">\n                    <div class="well sidebar-nav">\n                        <strong>Colors</strong>\n                        <ul class="list-group">\n                        '),h={},i={},g=c.each.call(b,"item","in","controller",{hash:{},inverse:l.noop,fn:l.program(1,f,e),contexts:[b,b,b],types:["ID","ID","ID"],hashContexts:i,hashTypes:h,data:e}),(g||0===g)&&e.buffer.push(g),e.buffer.push('\n                        </ul>\n                    </div>\n                </div>\n                <div class="col-md-9">\n                    '),h={},i={},e.buffer.push(k(c._triageMustache.call(b,"outlet",{hash:{},contexts:[b],types:["ID"],hashContexts:i,hashTypes:h,data:e}))),e.buffer.push("\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"),j}),Ember.TEMPLATES.index=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{},e.buffer.push("<h1>this is the index</h1>")}),Ember.TEMPLATES.todos=Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){b.buffer.push("All")}function g(a,b){b.buffer.push("Active")}function h(a,b){b.buffer.push("Completed")}function i(a,b){var d,e,f="";return b.buffer.push('\n  <button id="clear-completed" '),d={},e={},b.buffer.push(p(c.action.call(a,"clearCompleted",{hash:{},contexts:[a],types:["STRING"],hashContexts:e,hashTypes:d,data:b}))),b.buffer.push(">\n    Clear completed ("),d={},e={},b.buffer.push(p(c._triageMustache.call(a,"completed",{hash:{},contexts:[a],types:["ID"],hashContexts:e,hashTypes:d,data:b}))),b.buffer.push(")\n  </button>\n  "),f}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var j,k,l,m,n,o="",p=this.escapeExpression,q=c.helperMissing,r=this;return e.buffer.push('<section id="todoapp">\n  <header id="header">\n    <h1>todos</h1>\n    '),l={type:b,id:b,placeholder:b,value:b,action:b},m={type:"STRING",id:"STRING",placeholder:"STRING",value:"ID",action:"STRING"},n={hash:{type:"text",id:"new-todo",placeholder:"What needs to be done?",value:"newTitle",action:"createTodo"},contexts:[],types:[],hashContexts:l,hashTypes:m,data:e},e.buffer.push(p((j=c.input||b.input,j?j.call(b,n):q.call(b,"input",n)))),e.buffer.push('\n  </header>\n\n  <section id="main">\n    '),m={},l={},e.buffer.push(p(c._triageMustache.call(b,"outlet",{hash:{},contexts:[b],types:["ID"],hashContexts:l,hashTypes:m,data:e}))),e.buffer.push("\n    "),l={type:b,id:b,checked:b},m={type:"STRING",id:"STRING",checked:"ID"},n={hash:{type:"checkbox",id:"toggle-all",checked:"allAreDone"},contexts:[],types:[],hashContexts:l,hashTypes:m,data:e},e.buffer.push(p((j=c.input||b.input,j?j.call(b,n):q.call(b,"input",n)))),e.buffer.push('\n  </section>\n\n  <footer id="footer">\n    <span id="todo-count">\n      <strong>'),m={},l={},e.buffer.push(p(c._triageMustache.call(b,"remaining",{hash:{},contexts:[b],types:["ID"],hashContexts:l,hashTypes:m,data:e}))),e.buffer.push("</strong> "),m={},l={},e.buffer.push(p(c._triageMustache.call(b,"inflection",{hash:{},contexts:[b],types:["ID"],hashContexts:l,hashTypes:m,data:e}))),e.buffer.push(' left\n    </span>\n    <ul id="filters">\n      <li>\n        '),l={activeClass:b},m={activeClass:"STRING"},n={hash:{activeClass:"selected"},inverse:r.noop,fn:r.program(1,f,e),contexts:[b],types:["STRING"],hashContexts:l,hashTypes:m,data:e},j=c["link-to"]||b["link-to"],k=j?j.call(b,"todos.index",n):q.call(b,"link-to","todos.index",n),(k||0===k)&&e.buffer.push(k),e.buffer.push("\n      </li>\n      <li>\n        "),l={activeClass:b},m={activeClass:"STRING"},n={hash:{activeClass:"selected"},inverse:r.noop,fn:r.program(3,g,e),contexts:[b],types:["STRING"],hashContexts:l,hashTypes:m,data:e},j=c["link-to"]||b["link-to"],k=j?j.call(b,"todos.active",n):q.call(b,"link-to","todos.active",n),(k||0===k)&&e.buffer.push(k),e.buffer.push("\n      </li>\n      <li>\n        "),l={activeClass:b},m={activeClass:"STRING"},n={hash:{activeClass:"selected"},inverse:r.noop,fn:r.program(5,h,e),contexts:[b],types:["STRING"],hashContexts:l,hashTypes:m,data:e},j=c["link-to"]||b["link-to"],k=j?j.call(b,"todos.completed",n):q.call(b,"link-to","todos.completed",n),(k||0===k)&&e.buffer.push(k),e.buffer.push("\n      </li>\n    </ul>\n\n  "),m={},l={},k=c["if"].call(b,"hasCompleted",{hash:{},inverse:r.noop,fn:r.program(7,i,e),contexts:[b],types:["ID"],hashContexts:l,hashTypes:m,data:e}),(k||0===k)&&e.buffer.push(k),e.buffer.push('\n  </footer>\n</section>\n\n<footer id="info">\n  <p>Double-click to edit a todo</p>\n</footer>'),o}),Ember.TEMPLATES["todos/index"]=Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e,f,i,j,k="";return b.buffer.push("\n  <li "),f={"class":a},i={"class":"STRING"},j={hash:{"class":"isCompleted:completed isEditing:editing"},contexts:[],types:[],hashContexts:f,hashTypes:i,data:b},b.buffer.push(n((d=c["bind-attr"]||a["bind-attr"],d?d.call(a,j):m.call(a,"bind-attr",j)))),b.buffer.push(">\n    "),i={},f={},e=c["if"].call(a,"isEditing",{hash:{},inverse:o.program(4,h,b),fn:o.program(2,g,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:i,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n  </li>\n  "),k}function g(a,b){var d,e,f,g,h="";return b.buffer.push("\n    "),e={"class":a,value:a,"focus-out":a,"insert-newline":a},f={"class":"STRING",value:"ID","focus-out":"STRING","insert-newline":"STRING"},g={hash:{"class":"edit",value:"title","focus-out":"acceptChanges","insert-newline":"acceptChanges"},contexts:[],types:[],hashContexts:e,hashTypes:f,data:b},b.buffer.push(n((d=c["edit-todo"]||a["edit-todo"],d?d.call(a,g):m.call(a,"edit-todo",g)))),b.buffer.push("\n    "),h}function h(a,b){var d,e,f,g,h="";return b.buffer.push("\n    "),e={type:a,checked:a,"class":a},f={type:"STRING",checked:"ID","class":"STRING"},g={hash:{type:"checkbox",checked:"isCompleted","class":"toggle"},contexts:[],types:[],hashContexts:e,hashTypes:f,data:b},b.buffer.push(n((d=c.input||a.input,d?d.call(a,g):m.call(a,"input",g)))),b.buffer.push("\n    <label "),e={on:a},f={on:"STRING"},b.buffer.push(n(c.action.call(a,"editTodo",{hash:{on:"doubleClick"},contexts:[a],types:["STRING"],hashContexts:e,hashTypes:f,data:b}))),b.buffer.push(">"),f={},e={},b.buffer.push(n(c._triageMustache.call(a,"title",{hash:{},contexts:[a],types:["ID"],hashContexts:e,hashTypes:f,data:b}))),b.buffer.push("</label>\n    <button "),f={},e={},b.buffer.push(n(c.action.call(a,"removeTodo",{hash:{},contexts:[a],types:["STRING"],hashContexts:e,hashTypes:f,data:b}))),b.buffer.push(' class="destroy"></button>\n    '),h}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var i,j,k,l="",m=c.helperMissing,n=this.escapeExpression,o=this;return e.buffer.push('<ul id="todo-list">\n  '),j={itemModel:b,itemController:b},k={itemModel:"STRING",itemController:"STRING"},i=c.each.call(b,{hash:{itemModel:"todo",itemController:"todo"},inverse:o.noop,fn:o.program(1,f,e),contexts:[],types:[],hashContexts:j,hashTypes:k,data:e}),(i||0===i)&&e.buffer.push(i),e.buffer.push("\n</ul>"),l});